@using TaskManager.AdamResurces
@using TaskManager.Enums
@model TaskManager.Data.ViewModel.CityVM
@{
    ViewData["Title"] = "Edit";
}


<h2 class="text-dark text-center edit-head">@_CityVM.UpdateCity</h2>
<div class="col-12 lang" style="padding: 100px">

    <form method="post" asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-row font">
            <div class="form-group col-10  col-md-8">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                <label class="col-form-label inf-input">@_CityVM.Name</label>
                <span asp-validation-for="Name" class="text-danger"></span>
                @if (ViewBag.Name != null)
                {
                    <h6 style="color: red">@ViewBag.Name</h6>
                }
            </div>
        </div>
        <div class="form-row font">
            <div class="form-group col-10  col-md-8">
                <label class="col-form-label inf-input">@_UserInfo.SelectCountry</label>
                <select asp-for="Country" class="form-control country" asp-items="Html.GetEnumSelectList<Country>()">
                    <option selected="selected" value="">Country</option>
                </select>

                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
        </div>


        <div class="form-group">
         
            <button type="submit" style="background-color: #10CC7C" class="btn btn-info font last-btn" id="submit">@_button.Update</button>
        </div>
    </form>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(".City").parent().addClass('active').siblings().removeClass('active');

        $(".country").select2({
            theme: "classic",
            placeholder: "Select Country"

        });
    </script>

}
 


